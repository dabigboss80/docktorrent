#!/bin/bash
################################################
# rtorrent-healthcheck                         #
# Monitor rtorrent and restart it if it hangs. #
################################################

# Interval, in seconds
interval=30

# Delay start time, in seconds
delay_start=1200

# Times of retry
retry=3

# End of configuration

# We sleep first to avoid any race when starting for the first time.
sleep $delay_start

while true
do
    # Capture the HTTP status code when we send an XML request. If the API is
    # available, we should get a 200 OK. When it's not, we generally get a
    # Gateway Timeout from Nginx - but we aren't specifically looking for that.
    status_code=$(
      curl --silent \
           --data '<ping></ping>' \
           --write-out '%{http_code}' \
           --output /dev/null \
           --retry $retry \
           http://localhost/RPC2 \
    )
    if [ "$status_code" = "200" ]
    then
        sleep $interval
    else
        rm -f /rtorrent/.session/rtorrent.lock
        s6-svc -k /service/rtorrent
        sleep $delay_start
    fi
done

